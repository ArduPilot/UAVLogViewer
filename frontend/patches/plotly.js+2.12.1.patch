diff --git a/node_modules/plotly.js/src/plots/plots.js b/node_modules/plotly.js/src/plots/plots.js
index cda76cf..a4051ef 100644
--- a/node_modules/plotly.js/src/plots/plots.js
+++ b/node_modules/plotly.js/src/plots/plots.js
@@ -686,6 +686,30 @@ function getFormatObj(gd, formatKeys) {
     return formatObj;
 }
 
+
+function relativeTimeFormatter(milliseconds) {
+    let outputString = ''
+    let seconds = (milliseconds / 1000);
+    let minutes = Math.floor(seconds / 60)
+    seconds %= 60
+    let hours = Math.floor(minutes / 60)
+    minutes %= 60
+    let days = Math.floor(hours / 24)
+    hours %= 24
+    outputString = ''+seconds.toFixed(3).padStart(6, '0')
+    if (minutes >= 1 || hours >= 1 || days >= 1) {
+        outputString = `${minutes}`.padStart(2, '0') + ':' + outputString
+    }
+    if (hours >= 1 || days >= 1) {
+        outputString = hours + ':' + outputString
+    }
+    if (days >= 1) {
+        outputString = days + ' days ' + outputString
+    }
+    return outputString
+}
+
+
 /**
  * getFormatter: combine the final separators with the locale formatting object
  * we pulled earlier to generate number and time formatters
@@ -703,17 +727,8 @@ function getFormatter(formatObj, separators) {
     formatObj.thousands = separators.charAt(1);
 
     return {
-        numberFormat: function(formatStr) {
-            try {
-                formatStr = formatLocale(formatObj).format(
-                    Lib.adjustFormat(formatStr)
-                );
-            } catch(e) {
-                Lib.warnBadFormat(formatStr);
-                return Lib.noFormat;
-            }
-
-            return formatStr;
+        numberFormat: function(specifier) {
+            return relativeTimeFormatter
         },
         timeFormat: timeFormatLocale(formatObj).utcFormat
     };
